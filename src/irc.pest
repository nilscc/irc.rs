// message         ::= ['@' <tags> SPACE] [':' <source> SPACE] <command> <parameters> <crlf>
// SPACE           ::=  %x20 *( %x20 )   ; space character(s)
// crlf            ::=  %x0D %x0A        ; "carriage return" "linefeed"

WHITESPACE = _{ " " }

message =  { tags? ~ source? ~ command ~ parameters ~ crlf? }
crlf    = _{ "\x0D\x0A" }

// <tags>          ::= <tag> [';' <tag>]*
// <tag>           ::= <key> ['=' <escaped value>]
// <key>           ::= [ <client_prefix> ] [ <vendor> '/' ] <sequence of letters, digits, hyphens (`-`)>
// <client_prefix> ::= '+'
// <escaped value> ::= <sequence of any characters except NUL, CR, LF, semicolon (`;`) and SPACE>
// <vendor>        ::= <host>

tags          = @{ "@" ~ tag_list }
tag_list      = @{ tag ~ (";" ~ tag)* }
tag           = @{ key ~ "=" ~ value }
key           = @{ client_prefix? ~ (vendor ~ "/")? }
value         =  { ANY+ }
vendor        =  { ANY+ }
client_prefix = _{ "+" }

// source          ::=  <servername> / ( <nickname> [ "!" <user> ] [ "@" <host> ] )
// nick            ::=  <any characters except NUL, CR, LF, chantype
// character, and SPACE> <possibly empty sequence of any characters except
// NUL, CR, LF, and SPACE>
// user            ::=  <sequence of any characters except NUL, CR, LF, and SPACE>

source = { ANY+ }

// command         ::=  letter* / 3digit

command =  { LETTER+ | digit3 }
digit3  = @{ NUMBER{3} }

// parameters      ::=  *( SPACE middle ) [ SPACE ":" trailing ]
// nospcrlfcl      ::=  <sequence of any characters except NUL, CR, LF, colon (`:`) and SPACE>
// middle          ::=  nospcrlfcl *( ":" / nospcrlfcl )
// trailing        ::=  *( ":" / " " / nospcrlfcl )

parameters = { ANY+ }
